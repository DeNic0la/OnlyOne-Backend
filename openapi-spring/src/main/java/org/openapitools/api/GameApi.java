/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.openapitools.model.GameStatus;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.annotation.Generated;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-10-27T14:22:53.857087904+02:00[Europe/Zurich]")
@Validated
@Tag(name = "game", description = "Access to Information about a Running game")
@RequestMapping("${openapi.onlyOne.base-path:}")
public interface GameApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /game/{id} : shows the current Card and Turn
     *
     * @param id Id of the room to get Information from (required)
     * @param xUser  (optional)
     * @return Displaying Game Information (status code 200)
     */
    @Operation(
        operationId = "gameIdGet",
        summary = "shows the current Card and Turn",
        tags = { "game" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Displaying Game Information", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GameStatus.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/game/{id}",
        produces = { "application/json" }
    )
    default ResponseEntity<GameStatus> gameIdGet(
        @Parameter(name = "id", description = "Id of the room to get Information from", required = true) @PathVariable("id") Long id,
        @Parameter(name = "x-user", description = "") @RequestHeader(value = "x-user", required = false) String xUser
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"is_your_turn\" : true, \"card\" : { \"number\" : 4, \"color\" : \"blue\" } }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
